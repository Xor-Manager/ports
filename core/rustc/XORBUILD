#!/usr/bin/env bash
set -e

name=rustc
ver=1.84.1
dependencies=(
llvm
)

make_dependencies=""
url=https://static.rust-lang.org/dist/rustc-1.84.1-src.tar.xz

configure() {

sudo mkdir -p "/opt/rustc-1.84.1"
sudo mkdir -p "/usr/share/doc/rustc-1.84.1"

sudo tee "config.toml" > /dev/null << EOF
# see config.toml.example for more possible options
# See the 8.4 book for an old example using shipped LLVM
# e.g. if not installing clang, or using a version before 13.0

# Tell x.py the editors have reviewed the content of this file
# and updated it to follow the major changes of the building system,
# so x.py will not warn us to do such a review.
change-id = 133207

[llvm]
# When using system llvm prefer shared libraries
link-shared = true

# Do not download pre-built LLVM, instead either use the system
# LLVM or build LLVM from the shipped source.
download-ci-llvm = false

# If building the shipped LLVM source, only enable the x86 target
# instead of all the targets supported by LLVM.
targets = "X86"

[build]
# omit docs to save time and space (default is to build them)
docs = false

# install extended tools: cargo, clippy, etc
extended = true

# Do not query new versions of dependencies online.
locked-deps = true

# Specify which extended tools (those from the default install).
tools = ["cargo", "clippy", "rustdoc", "rustfmt"]

# Use the source code shipped in the tarball for the dependencies.
# The combination of this and the "locked-deps" entry avoids downloading
# many crates from Internet, and makes the Rustc build more stable.
vendor = true

[install]
prefix = "/opt/rustc-1.84.1"
docdir = "/usr/share/doc/rustc-1.84.1"

[rust]
channel = "stable"
description = "for BLFS r12.2-1385"

# Enable the same optimizations as the official upstream build.
lto = "thin"
codegen-units = 1

# Don't download compiler components from the upstream CI:
# it's only intended for developers working on standard library
# and tools, and it only works with the Rust Git repository.
download-rustc = false

[target.x86_64-unknown-linux-gnu]
llvm-config = "/usr/bin/llvm-config"

[target.i686-unknown-linux-gnu]
llvm-config = "/usr/bin/llvm-config"
EOF

	sudo sed '/MirOpt/d' -i src/bootstrap/src/core/builder/mod.rs

[ ! -e /usr/include/libssh2.h ] || export LIBSSH2_SYS_USE_PKG_CONFIG=1
[ ! -e /usr/include/sqlite3.h ] || export LIBSQLITE3_SYS_USE_PKG_CONFIG=1
sudo ./x.py build

}

build() {
	sudo ./x.py install rustc std &&
	sudo ./x.py install --stage=1 cargo clippy rustfmt

sudo rm -fv /opt/rustsc-1.84.1/share/doc/rustc-1.84.1*.old &&
#install -vm644 README.md                                \
#               $prefix/opt/rustc-1.84.1/share/doc/rustc-1.84.1 &&

install -vdm755 /usr/share/zsh/site-functions      &&
ln -sfv /opt/rustc/share/zsh/site-functions/_cargo \
        /usr/share/zsh/site-functions

#mv -v $prefix/etc/bash_completion.d/cargo $prefix/usr/share/bash-completion/completions
}

