#!/usr/bin/env bash
set -e

source $(dirname "$0")/../core/config.sh

name=llvm
ver=19.1.7
dependencies=()

make_dependencies=""
url=https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.7/llvm-19.1.7.src.tar.xz
prefix=$MANAGER_PREFIX/$name

configure() {

	pushd ../../
		sudo bash <<- EOF
			wget https://anduin.linuxfromscratch.org/BLFS/llvm/llvm-cmake-19.1.7.src.tar.xz &&
			tar -xf ./llvm-cmake-19.1.7.src.tar.xz  &&

			wget https://anduin.linuxfromscratch.org/BLFS/llvm/llvm-third-party-19.1.7.src.tar.xz &&
			tar -xf ./llvm-third-party-19.1.7.src.tar.xz &&


			wget https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.7/clang-19.1.7.src.tar.xz &&

			mkdir -p tools &&
			tar -xf ./clang-19.1.7.src.tar.xz -C tools
	EOF
	popd


	sudo sed '/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-19.1.7.src@'          \
		-i ../CMakeLists.txt                                                &&

	sudo sed '/LLVM_THIRD_PARTY_DIR/s@../third-party@third-party-19.1.7.src@' \
		-i ../cmake/modules/HandleLLVMOptions.cmake



	sudo mv ../../tools/clang-19.1.7.src ../tools/clang &&
	sudo sed 's/utility/tool/' -i ../utils/FileCheck/CMakeLists.txt &&

	sudo mv ../../cmake-19.1.7.src ../
	sudo mv ../../third-party-19.1.7.src ../


	#if [ ! -d "\$prefix/include" ]; then
	#	sudo mkdir -p "$prefix/include"
	#fi

	#if [ ! -d "$prefix/etc" ]; then
	#	sudo mkdir -p "$prefix/etc"
	#fi

		CC=gcc CXX=g++                               \
		sudo cmake -D CMAKE_INSTALL_prefix=/usr          \
		      -D CMAKE_SKIP_INSTALL_RPATH=ON         \
		      -D LLVM_ENABLE_FFI=ON                  \
		      -D CMAKE_BUILD_TYPE=Release            \
		      -D LLVM_BUILD_LLVM_DYLIB=ON            \
		      -D LLVM_LINK_LLVM_DYLIB=ON             \
		      -D LLVM_ENABLE_RTTI=ON                 \
		      -D LLVM_TARGETS_TO_BUILD="host;AMDGPU" \
		      -D LLVM_BINUTILS_INCDIR="/include"   \
		      -D LLVM_INCLUDE_BENCHMARKS=OFF         \
		      -D CLANG_DEFAULT_PIE_ON_LINUX=ON       \
		      -D CLANG_CONFIG_FILE_SYSTEM_DIR="/etc/clang" \
		      -W no-dev -G Ninja ..                  &&
		sudo ninja
}

build() {
	sudo ninja DESTDIR="$prefix"install
}
